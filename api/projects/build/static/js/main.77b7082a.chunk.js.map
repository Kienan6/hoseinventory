{"version":3,"sources":["common/shared/splash.js","common/main/hoseLookup.js","common/utils/department.js","common/main/hoseForm.js","common/main/hoseinformation.js","common/main/formPage.js","common/utils/details.js","common/main/hoseInventory.js","common/accounts/login.js","common/accounts/create.js","common/accounts/account.js","common/admin/progressWidget.js","common/admin/addNewForm.js","common/admin/information.js","common/utils/logistics.js","common/shared/overlay.js","common/admin/progress.js","common/shared/auth.js","common/shared/menu.js","common/logout/logout.js","App.js","serviceWorker.js","index.js"],"names":["Splash","props","Container","Grid","container","direction","justify","alignItems","spacing","style","minHeight","type","color","height","width","HoseLookup","Fade","in","timeout","onSubmit","item","FormControl","FormLabel","filled","component","required","TextField","error","helperText","autoFocus","name","onChange","id","label","variant","Button","sizes","value","departments","units","designators","ret","forEach","u","d","x","push","unit","department","useStyles","makeStyles","theme","form","padding","flexGrow","field","vertical","display","flexDirection","marginZero","justifyContent","margin","formHelper","fontSize","bg","backgroundColor","expansionPanel","transition","transitions","create","duration","marginTop","border","expansionSelected","heading","typography","pxToRem","fontWeight","fontWeightRegular","close","LargeSwitch","withStyles","root","switchBase","transform","checked","track","Switch","HoseForm","classes","expansionClass","expanded","Paper","alignContent","className","InputLabelProps","shrink","FormHelperText","ExpansionPanel","onExpand","elevation","ExpansionPanelSummary","expandIcon","Typography","hose","current","ExpansionPanelDetails","fullWidth","Autocomplete","options","sort","a","b","groupBy","option","getOptionLabel","onAuto","new","renderInput","params","FormControlLabel","control","hoseOK","aria-describedby","labelPlacement","descHose","gasketOK","descGasket","card","minWidth","bullet","title","pos","marginBottom","HoseInformation","Card","CardContent","gutterBottom","info","inventoryNum","previous","test","Divider","number","filter","s","size","length","mfgDate","manufacturer","FormPage","API","palette","dark","success","HoseInventory","useState","setHose","setInfo","loading","setLoading","showForm","setForm","setError","snackbar","setSnackbar","lookupID","setLookupID","setExpanded","useEffect","setTimeout","handleSnackBarClose","e","reason","target","preventDefault","h","parseInt","newInvNum","hoseNum","hosePass","gasketPass","hoseSize","hoseLength","hoseMfgDate","prevLocation","newLocation","dateTested","axios","post","then","res","data","failure","expand","Snackbar","anchorOrigin","horizontal","open","autoHideDuration","onClose","ContentProps","message","action","key","onClick","IconButton","aria-label","prevLoc","dateTest","passHose","passGasket","yearMfg","curLoc","Login","align","paddingBottom","user","username","password","background","children","Link","href","Account","login","setLogin","setSuccess","setUser","handleLoginChange","handleChange","to","auth","authenticate","onSuccess","defaults","withCredentials","maxWidth","headingGreater","headingLess","information","ProgressWidget","Box","percentage","opacity","for","marginRight","strokeWidth","styles","buildStyles","strokeLinecap","pathTransitionDuration","pathColor","textColor","trailColor","column","flex","layout","modal","AddNewButton","borderRadius","boxShadow","AddNewForm","Modal","submitted","BackdropComponent","Toolbar","xs","inputProps","pattern","date","InputLabel","htmlFor","Select","labelId","labelWidth","map","MenuItem","multiline","toolbar","marginLeft","Information","page","setPage","rowsPerPage","setRowsPerPage","onAdd","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","slice","row","index","hover","onEdit","onDelete","scope","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","validateDate","moment","diff","percentageComplete","hoses","filteredHoses","valid","total","Math","ceil","overflowX","Overlay","onBackdropClick","Backdrop","BackdropProps","transitionDuration","PromptButton","paper","zIndex","ProgressPanel","setSubmitted","setData","percentages","setPercentages","oldInvNum","setOld","prompt","edit","delete","openOverlay","setOpenOverlay","snackOpen","setSnack","get","completed","getHoses","t","updated","findIndex","splice","getHose","handlePrompt","selected","handlePromptDelete","handleAutoCorrect","Prompt","onCancel","onAccept","handleSnackClose","event","align-items","Alert","severity","Auth","admin","authenticated","callback","loggedIn","logout","this","body","menu","short","menuOpen","menuClosed","menuBody","top","position","menuItem","userSelect","boxSizing","borderRight","textAlign","shorter","Menu","setMenu","redirect","setRedirect","location","useLocation","getCorrectMenu","path","pathname","items","list","permissions","ClickAwayListener","onClickAway","m","join","Collapse","enter","exit","Fragment","i","Logout","loggedOut","setLoggedOut","Axios","App","setLoggedIn","showMenu","ProtectedRoute","Component","privledges","prevent","rest","render","handleMenu","exact","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.77b7082a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nexport default function Splash(props) {\r\n    return (\r\n        <Container>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                style={{\r\n                minHeight: \"100vh\"\r\n            }}>\r\n                <Loader type=\"RevolvingDot\" color=\"#3573c4\" height={200} width={200}/>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\n/*\r\nprops\r\nerror,\r\nonChange\r\nonSubmit\r\n*/\r\nexport default function HoseLookup(props) {\r\n    return(\r\n            <Fade in timeout={1200}>\r\n                <div>\r\n                    <form onSubmit={props.onSubmit}>\r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            spacing={2}\r\n                            style={{\r\n                            minHeight: \"100vh\"\r\n                        }}>\r\n                            <Grid item>\r\n                                <FormControl>\r\n                                    <FormLabel filled component=\"h2\">Enter the Hose Inventory Number</FormLabel>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <FormControl required>\r\n                                    <TextField\r\n                                        error={props.error}\r\n                                        helperText={props.error\r\n                                        ? \"Inventory number not found\"\r\n                                        : \"\"}\r\n                                        required\r\n                                        autoFocus\r\n                                        name=\"hoseID\"\r\n                                        onChange={props.onChange}\r\n                                        type=\"number\"\r\n                                        id=\"hoseID\"\r\n                                        label=\"Hose Inventory Number\"\r\n                                        variant=\"filled\"/>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <FormControl>\r\n                                    <Button variant=\"contained\" type=\"submit\" color=\"primary\">Submit</Button>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            </Fade>\r\n    );\r\n}","\r\n    export const sizes = [{label:'2\"', value: 2}, \r\n    {label:'2 1/2\"', value: 2.5}, \r\n    {label:'3\"', value: 3}, \r\n    {label:'3 1/2\"', value: 3.5}, \r\n    {label:'4\"', value: 4}];\r\n\r\n    export const departments = [\"151\",\"152\",\"153\",\"154\",\"155\"];\r\n\r\n    export const units = [\"C\", \"E\", \"TR\", \"LT\"];\r\n\r\n    export const designators = () => {\r\n        var ret = [];\r\n        units.forEach(u => {\r\n            departments.forEach(d => {\r\n                var x = u + \"\" + d;\r\n                ret.push({ unit: x, department: d});\r\n            })\r\n        }\r\n        );\r\n        return ret;\r\n    }\r\n\r\n    export default {}\r\n","import React, {Component, useState} from 'react';\r\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { designators, sizes } from '../utils/department'\r\n\r\nconst useStyles = makeStyles (theme => ({\r\n    form: {\r\n        padding: 20,\r\n        flexGrow: 1\r\n    },\r\n    field: {\r\n        width: 300\r\n    },\r\n    vertical: {\r\n        display: 'flex',\r\n        width: 600,\r\n        height: 600,\r\n        flexDirection: 'column'\r\n    },\r\n    marginZero: {\r\n        justifyContent: \"flex-end\",\r\n        margin: 0\r\n    },\r\n    formHelper: {\r\n        fontSize: \"1em\",\r\n    },\r\n    bg: {\r\n        backgroundColor: \"#e8e8e8\"\r\n    },\r\n    expansionPanel: {\r\n        transition: theme.transitions.create(\r\n            ['border'],\r\n            {duration: 100},\r\n        ),\r\n        marginTop: 0,\r\n        border: '1px #d0d0d0 outset'\r\n    },\r\n    expansionSelected : {\r\n        border: \"#3f51b5 3px solid\",\r\n    },\r\n    heading: {\r\n        fontSize: theme\r\n            .typography\r\n            .pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular\r\n    },\r\n    close: {\r\n        padding: theme.spacing(0.5),\r\n    },\r\n}));\r\nconst LargeSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 100\r\n    },\r\n    switchBase: {\r\n        color: \"#fc4e4e\",\r\n        '&$checked': {\r\n            color: \"#85cf80\",\r\n            transform: \"translateX(160%)\"\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: \"#206b1b\"\r\n        }\r\n    },\r\n    checked: {},\r\n    track: {}\r\n}))(Switch);\r\n/*\r\nprops:\r\nonSubmit\r\nonChange\r\nonExpand\r\nexpanded\r\nhose\r\n*/\r\nexport default function HoseForm(props) {\r\n    const classes = useStyles();\r\n    var expansionClass = classes.expansionPanel + \" \" + (props.expanded ? classes.expansionSelected : \"\"); \r\n    return (\r\n        <div>\r\n            <Paper>\r\n                <form onSubmit={props.onSubmit}>\r\n                    <Grid container \r\n                    direction=\"column\" \r\n                    justify=\"space-evenly\" \r\n                    alignContent=\"center\">\r\n                            <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignContent=\"center\"\r\n                                spacing={2}\r\n                                className={classes.form}>\r\n                                <Grid item>\r\n                                    <FormLabel component=\"h1\">Hose Evaluation</FormLabel>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <FormControl className={classes.field}>\r\n                                        <TextField\r\n                                            required \r\n                                            id=\"date\"\r\n                                            name=\"dateTested\"\r\n                                            label=\"Date Checked\"\r\n                                            type=\"date\"\r\n                                            onChange={props.onChange('test')}\r\n                                            InputLabelProps={{\r\n                                            shrink: true\r\n                                        }}/>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <FormControl className={classes.field}>\r\n                                        <FormHelperText className={classes.formHelper} id=\"changed-location-help\">Has the Hose moved locations?</FormHelperText>\r\n\r\n                                        <ExpansionPanel onChange={props.onExpand} \r\n                                                        className={expansionClass} \r\n                                                        elevation={0}>\r\n                                            <ExpansionPanelSummary expandIcon={< ExpandMoreIcon />}>\r\n                                                <Typography className={classes.heading}>\r\n                                                    Current Location:\r\n                                                    <strong> {props.hose.current.unit}</strong>\r\n                                                </Typography>\r\n\r\n                                            </ExpansionPanelSummary>\r\n                                            <ExpansionPanelDetails fullWidth>\r\n                                            <Autocomplete\r\n                                                id=\"hose-new\"\r\n                                                style={{width: \"100%\"}}\r\n                                                options={designators().sort((a,b) => a.department < b.department)}\r\n                                                groupBy={option => option.department}\r\n                                                getOptionLabel={option => option.unit}\r\n                                                onChange={props.onAuto('new')}\r\n                                                value={props.hose.new}\r\n                                                renderInput={params => (\r\n                                                    <TextField {...params}\r\n                                                    variant=\"outlined\"\r\n                                                    required\r\n                                                    label=\"New Location\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                        }}\r\n                                                    fullWidth/>\r\n                                                )}\r\n                                                />\r\n                                            </ExpansionPanelDetails>\r\n                                        </ExpansionPanel>\r\n\r\n                                    </FormControl>\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n                                    <FormControl>\r\n                                        <FormHelperText className={classes.formHelper} id=\"my-helper-text\">Does the Hose pass inspection?</FormHelperText>\r\n\r\n                                        <FormControlLabel\r\n                                            control={< LargeSwitch type = \"checkbox\" onChange = {\r\n                                            props.onChange('hoseOK')\r\n                                        }\r\n                                        checked = {\r\n                                            props.hose.hoseOK\r\n                                        }\r\n                                        name = \"hosepass\" aria-describedby = 'my-helper-text' />}\r\n                                            label={props.hose.hoseOK\r\n                                            ? \"Pass\"\r\n                                            : \"Fail\"}\r\n                                            labelPlacement='start'\r\n                                            className={classes.marginZero}/>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                { !props.hose.hoseOK ?\r\n                                    <Grid item>\r\n                                        <FormControl>\r\n                                            <FormHelperText>Describe the Issue</FormHelperText>\r\n                                            <TextField \r\n                                            onChange={props.onChange('descHose')}\r\n                                            variant=\"outlined\"\r\n                                            value={props.hose.descHose}\r\n                                            />\r\n                                            </FormControl>\r\n                                    </Grid> : \"\"}\r\n                                <Grid item>\r\n                                    <FormControl>\r\n                                        <FormHelperText className={classes.formHelper} id=\"my-helper-text-2\">Does the Gasket/Seal pass inspection?</FormHelperText>\r\n\r\n                                        <FormControlLabel\r\n                                            control={< LargeSwitch type = \"checkbox\" onChange = {\r\n                                            props.onChange('gasketOK')\r\n                                        }\r\n                                        checked = {\r\n                                            props.hose.gasketOK\r\n                                        }\r\n                                        name = 'gasketpass' aria-describedby = 'my-helper-text-2' />}\r\n                                            label={props.hose.gasketOK\r\n                                            ? \"Pass\"\r\n                                            : \"Fail\"}\r\n                                            labelPlacement='start'\r\n                                            className={classes.marginZero}/>\r\n                                    </FormControl>\r\n                                    { !props.hose.gasketOK ?\r\n                                    <Grid item>\r\n                                            <FormControl>\r\n                                            <FormHelperText>Describe the Issue</FormHelperText>\r\n                                            <TextField \r\n                                            onChange={props.onChange('descGasket')}\r\n                                            variant=\"outlined\"\r\n                                            value={props.hose.descGasket}\r\n                                            />\r\n                                            </FormControl>\r\n                                    </Grid> : \"\"}\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <FormControl className={classes.field}>\r\n                                        <Button variant=\"contained\" type=\"submit\" color=\"primary\">Submit</Button>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {sizes} from '../utils/department';\r\nimport { Divider, Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    card: {\r\n        minWidth: 225\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)'\r\n    },\r\n    title: {\r\n        fontSize: 14\r\n    },\r\n    pos: {\r\n        marginBottom: 12\r\n    }\r\n}));\r\n/*\r\nprops:\r\nhose\r\n*/\r\nexport default function HoseInformation(props) {\r\n    const classes = useStyles();\r\n    return (\r\n            <div>\r\n                <Card className={classes.card}>\r\n                    <CardContent>\r\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>Hose Information</Typography>\r\n                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"h2\">\r\n                            Inventory #: {props.info.inventoryNum}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" component=\"h2\">\r\n                            Previous Location: {props.info.previous.unit}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"h2\">\r\n                            Previous Test\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\" component=\"h2\">\r\n                            Date: {props.info.test}\r\n                        </Typography>\r\n                        <Divider />\r\n                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"h2\">\r\n                            <Grid container\r\n                                direction=\"row\"\r\n                                justify=\"center\"\r\n                                spacing={2}>\r\n                                    <Grid item>\r\n                                    Hose {props.info.hoseOK ? <div style={{color: \"green\"}}>   Pass</div>\r\n                                            : <div style={{color: \"red\"}}>  Fail</div>}\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                    Gasket {props.info.gasketOK ? <div style={{color: \"green\"}}>   Pass</div>\r\n                                            : <div style={{color: \"red\"}}>  Fail</div>}\r\n                                    </Grid>\r\n                                </Grid>\r\n                        </Typography>\r\n                        <Divider />\r\n                        <Typography variant=\"h6\" color=\"textSecondary\" component=\"h2\">\r\n                            Hose #: {props.info.number}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\" component=\"h2\">\r\n                            Size: {sizes.filter(s => s.value == props.info.size)[0].label}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\" component=\"h2\">\r\n                            Length: {props.info.length}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\" component=\"h2\">\r\n                            Year Manufactured: {props.info.mfgDate}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\" component=\"h2\">\r\n                            Manufactured By: {props.info.manufacturer}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Grid} from '@material-ui/core';\r\nimport HoseForm from './hoseForm';\r\nimport HoseInformation from './hoseinformation';\r\n/*\r\nprops:\r\nonChange\r\nonSubmit\r\nonAuto\r\nexpanded\r\nhose\r\ninfo\r\n*/\r\nexport default function FormPage(props) {\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"flex-start\"\r\n            spacing={2}>\r\n            <Grid item>\r\n                <HoseForm\r\n                    hose={props.hose}\r\n                    onAuto={props.onAuto}\r\n                    onSubmit={props.onSubmit}\r\n                    onChange={props.onChange}\r\n                    onExpand={props.onExpand}\r\n                    expanded={props.expanded}\r\n                />\r\n            </Grid>\r\n            <Grid item>\r\n                <HoseInformation \r\n                    info={props.info}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","export const API = \"http://api.kienanobrien.com:9000/\";\r\n\r\nexport default API;","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport axios from 'axios';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Splash from '../shared/splash';\r\nimport { useEffect } from 'react';\r\nimport HoseLookup from './hoseLookup';\r\nimport FormPage from './formPage';\r\nimport API from '../utils/details';\r\n\r\nconst useStyles = makeStyles ( theme => ({\r\n  close: {\r\n      padding: theme.spacing(0.5),\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  success: {\r\n    backgroundColor: \"green\",\r\n  },\r\n}));\r\n/*\r\nTop level component\r\n*/\r\nexport default function HoseInventory(props) {\r\n\r\n    const classes = useStyles();\r\n    //add/update hose information\r\n    const [hose, setHose] = useState({\r\n        inventoryNum: 0,\r\n        number: 0,\r\n        size: 2.5,\r\n        length: 0,\r\n        previous: {unit:\"\", department:\"\"},\r\n        current: {unit:\"\", department:\"\"},\r\n        new: {unit: \"\", department: \"\"},\r\n        test: 0,\r\n        hoseOK: false,\r\n        gasketOK: false,\r\n        descHose: \"\",\r\n        descGasket: \"\",\r\n        manufacturer: \"\",\r\n        mfgDate: 2000,\r\n    });\r\n    //information pane\r\n    const [info, setInfo] = useState({\r\n        inventoryNum: 0,\r\n        number: 0,\r\n        size: 2.5,\r\n        length: 0,\r\n        previous: {unit:\"\", department:\"\"},\r\n        test: 0,\r\n        hoseOK: false,\r\n        gasketOK: false,\r\n        descHose: \"\",\r\n        descGasket: \"\",\r\n        manufacturer: \"\",\r\n        mfgDate: 2000,\r\n    });\r\n    //ui state\r\n    const [loading, setLoading] = useState(false);\r\n    const [showForm, setForm] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [snackbar, setSnackbar] = useState(false);\r\n    const [lookupID, setLookupID] = useState(-1);\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n\r\n    //loading screen\r\n    useEffect(() => {\r\n        function splashTimer() {\r\n            setTimeout(() =>{\r\n                setLoading(false);\r\n            }, 3000);\r\n        }\r\n        if(loading) splashTimer();\r\n    }, [loading]);\r\n    const handleLookupSubmit = e => {\r\n        e.preventDefault();\r\n        const h = {\r\n            inventoryNum: parseInt(lookupID)\r\n        }\r\n        axios\r\n            .post(API+ \"getHose\", {h})\r\n            .then(res => {\r\n                if(res.data.failure){\r\n                    setError(true);\r\n                } else {\r\n                    setLoading(true);\r\n                    var data = res.data;\r\n                    setInfo({\r\n                        inventoryNum: data.inventoryNum,\r\n                        number: data.hoseNum,\r\n                        size: data.size,\r\n                        length: data.length,\r\n                        previous: data.prevLoc,\r\n                        test: data.dateTest,\r\n                        hoseOK: data.passHose,\r\n                        gasketOK: data.passGasket,\r\n                        descHose: data.descHose,\r\n                        descGasket: data.descGasket,\r\n                        manufacturer: data.manufacturer,\r\n                        mfgDate: data.yearMfg,\r\n                    });\r\n                    setHose({\r\n                        ...hose,\r\n                        inventoryNum: data.inventoryNum,\r\n                        number: data.hoseNum,\r\n                        size: data.size,\r\n                        length: data.length,\r\n                        previous: data.prevLoc,\r\n                        current: data.curLoc,\r\n                        new: data.curLoc,\r\n                        manufacturer: data.manufacturer,\r\n                        mfgDate: data.yearMfg,\r\n                    });\r\n                    setForm(true);\r\n                }\r\n            });\r\n    }\r\n    const handleLookupChange = e => {\r\n        setLookupID(e.target.value);\r\n    }\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault();\r\n        //using update in two seperate instances hence newInvNum\r\n        const h = {\r\n            inventoryNum: parseInt(hose.inventoryNum),\r\n            newInvNum: parseInt(hose.inventoryNum),\r\n            hoseNum: parseInt(hose.number),\r\n            hosePass: hose.hoseOK,\r\n            gasketPass: hose.gasketOK,\r\n            hoseSize: hose.size,\r\n            hoseLength: parseInt(hose.length),\r\n            hoseMfgDate: parseInt(hose.mfgDate),\r\n            prevLocation: hose.current,\r\n            newLocation: expanded ? hose.new : hose.current,\r\n            dateTested: hose.test,\r\n            manufacturer: hose.manufacturer,\r\n            descHose: hose.descHose,\r\n            descGasket: hose.descGasket\r\n        }\r\n        axios\r\n            .post(API +\"updateHose\", {h})\r\n            .then(res => {\r\n                if(res.data.failure){\r\n                    //message or something/ snackbar\r\n                } else {\r\n                    setSnackbar(true);\r\n                }\r\n            });\r\n    }\r\n    const handleFormChange = name => e => {\r\n        if(e.target.type === 'checkbox') {\r\n            setHose({...hose, [name]: e.target.checked})\r\n        } else {\r\n            setHose({...hose, [name] : e.target.value });\r\n        }\r\n    }\r\n    const handleAutoCorrect = name => (e, value) => {\r\n        setHose({...hose, [name]: value});\r\n    };\r\n    const handleSnackBarClose = (e, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n      \r\n        setSnackbar(false);\r\n    }\r\n    const handleExpansion = (e, expand) => {\r\n        setExpanded(expand);\r\n    }\r\n\r\n    //render depending on state\r\n    if( loading ){//splash screen\r\n        return (\r\n            <Splash />\r\n        );\r\n    } else if( showForm ) {//form screen\r\n        return (\r\n            <Fade in timeout={500}>\r\n            <Container>\r\n                <FormPage\r\n                    onChange={handleFormChange}\r\n                    onSubmit={handleFormSubmit}\r\n                    onAuto={handleAutoCorrect}\r\n                    onExpand={handleExpansion}\r\n                    hose={hose}\r\n                    info={info} \r\n                    expanded={expanded}\r\n                    />\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                    }}\r\n                    open={snackbar}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackBarClose}\r\n                    ContentProps={{\r\n                    'className': classes.success,\r\n                    'aria-describedby': 'message-id',\r\n                    }}\r\n                    message={\r\n                        <span id=\"message-id\">\r\n                        {\"Updated need to change\"}\r\n                        </span>\r\n                    }\r\n                    action={[\r\n                    <Button variant=\"contained\" key=\"newHose\" color=\"default\" size=\"medium\" onClick=\"\">\r\n                        New Hose\r\n                    </Button>,\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        className={classes.close}\r\n                        onClick={handleSnackBarClose}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>,\r\n                    ]}\r\n                />\r\n            </Container>\r\n            </Fade>\r\n        );\r\n    } else {//Hose lookup screen\r\n        return (\r\n            <HoseLookup \r\n            onSubmit={handleLookupSubmit}\r\n            onChange={handleLookupChange}\r\n            error={error}\r\n            />\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Grid, TextField, Button, Paper, FormControl, Typography, FormHelperText, Link} from '@material-ui/core';\r\nexport default function Login(props) {\r\n    const BigButton = (props) =>(\r\n        <Button \r\n        style={{color: \"white\", background: \"#63d691\", width:\"100%\"}}\r\n        type=\"submit\" >{props.children}</Button>\r\n    );\r\n    return (\r\n        <Paper style={{padding: 10}}>\r\n        <form onSubmit={props.onSubmit}>\r\n            <Typography \r\n            variant=\"h6\" \r\n            align=\"center\" \r\n            color=\"textSecondary\"\r\n            style={{paddingBottom: 10}}\r\n            >\r\n                Login\r\n            </Typography>\r\n            <Grid container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"stretch\"\r\n                spacing={2}>\r\n                <Grid item >\r\n                    <FormControl required>\r\n                    <TextField\r\n                        required\r\n                        error={props.error.error}\r\n                        label=\"Username\"\r\n                        variant=\"outlined\"\r\n                        onChange={props.onChange('username')}\r\n                        value={props.user.username}\r\n                        />\r\n                        </FormControl>\r\n                </Grid>\r\n                <Grid item>\r\n                    <FormControl required>\r\n                    <TextField\r\n                            required\r\n                            error={props.error.error}\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant=\"outlined\"\r\n                            onChange={props.onChange('password')}\r\n                            value={props.user.password}\r\n                            />\r\n                    {props.error.error ?\r\n                        <FormHelperText error>Username or Password was Incorrect</FormHelperText> : \"\"\r\n                    }\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item >\r\n                    <FormControl fullWidth>\r\n                        <BigButton>Submit</BigButton>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Link \r\n                        href=\"#\"\r\n                        color=\"textSecondary\"\r\n                        onClick={props.onClick(false)}>Create Account</Link>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n        </Paper>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport {Grid, TextField, Button, Paper, FormControl, Typography, Link} from '@material-ui/core';\r\nexport default function Login(props) {\r\n    const BigButton = (props) =>(\r\n        <Button \r\n        style={{color: \"white\", background: \"#63d691\", width:\"100%\"}}\r\n        type=\"submit\" >{props.children}</Button>\r\n    );\r\n    return (\r\n        <Paper style={{padding: 10}}>\r\n        <form onSubmit={props.onSubmit}>\r\n            <Typography \r\n            variant=\"h6\" \r\n            align=\"center\" \r\n            color=\"textSecondary\"\r\n            style={{paddingBottom: 10}}\r\n            >\r\n                Create Account\r\n            </Typography>\r\n            <Grid container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"stretch\"\r\n                spacing={2}>\r\n                <Grid item >\r\n                    <FormControl required>\r\n                    <TextField\r\n                        required\r\n                        error={props.error.error}\r\n                        label=\"Username\"\r\n                        variant=\"outlined\"\r\n                        onChange={props.onChange('username')}\r\n                        value={props.user.username}\r\n                        />\r\n                        </FormControl>\r\n                </Grid>\r\n                <Grid item>\r\n                    <FormControl required>\r\n                    <TextField\r\n                            required\r\n                            error={props.error.error}\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant=\"outlined\"\r\n                            onChange={props.onChange('password')}\r\n                            value={props.user.password}\r\n                            />\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item >\r\n                    <FormControl fullWidth>\r\n                        <BigButton>Submit</BigButton>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Link color=\"textSecondary\" href=\"#\" onClick={props.onClick(true)}>\r\n                        Go Back\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n        </Paper>\r\n\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport Login from './login';\r\nimport Create from './create';\r\nimport axios from 'axios';\r\nimport {Redirect} from 'react-router-dom';\r\nimport API from '../utils/details';\r\n\r\n\r\n//login/create account page\r\nexport default function Account(props) {\r\n    const [login, setLogin] = useState(true);\r\n    const [success, setSuccess] = useState(false);\r\n    const [error, setError] = useState({\r\n        error:false,\r\n        message: \"\"});\r\n    const [user, setUser] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n    const handleLoginSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.auth.login(user, (res) => {\r\n            if(!res.failure){\r\n                props.auth.authenticate(function(){\r\n                    setSuccess(true);\r\n                    props.onSuccess();\r\n                });\r\n            } else {\r\n                setError({\r\n                    error: res.failure,\r\n                    message: res.message,\r\n                });\r\n            }\r\n        });\r\n        \r\n    }\r\n    const handleLoginChange = value => e => {\r\n        setLogin(value);\r\n    }\r\n    const handleChange = name => e => {\r\n        setUser({\r\n            ...user,\r\n            [name]: e.target.value,\r\n        })\r\n    }\r\n    const handleCreateSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.defaults.withCredentials = true;\r\n        axios\r\n            .post(API+\"user/create\", {user})\r\n            .then((res) =>{\r\n                if(res.failure){\r\n                    setError({\r\n                        error: res.failure,\r\n                        message: res.message,\r\n                    })\r\n                } else {\r\n                    //log the user in directly after creating an account\r\n                    props.auth.login(user, (res) => {\r\n                        if(!res.failure){\r\n                            props.auth.authenticate(() => {\r\n                                setSuccess(true);\r\n                                props.onSuccess();\r\n                            });\r\n                        } else {\r\n                            setError({\r\n                                error: true,\r\n                                message: \"Could not log in.\"\r\n                            })\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n    }\r\n    if(success){\r\n        return (\r\n            <Redirect to=\"/inventory\" />\r\n        );\r\n    }\r\n\r\n    return(\r\n        <Grid container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            style={{minHeight: \"100vh\"}}>\r\n                {login ? \r\n                <Login error={error} onClick={handleLoginChange} onSubmit={handleLoginSubmit} onChange={handleChange} user={user}/> \r\n                : <Create error={error} onClick={handleLoginChange} onSubmit={handleCreateSubmit} onChange={handleChange} user={user} />}\r\n            </Grid>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport { Paper, Box, makeStyles,Typography, Grid } from '@material-ui/core';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport 'typeface-roboto';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\tcontainer: {\r\n        maxWidth: 225,\r\n    },\r\n    headingGreater: {\r\n        color: \"#ffffff\",\r\n        backgroundColor: \"#66d17f\",\r\n        width: \"100%\",\r\n        padding: 10,\r\n    },\r\n    headingLess: {\r\n        color: \"#ffffff\",\r\n        backgroundColor: \"#de5454\",\r\n        width: \"100%\",\r\n        padding: 10,\r\n    },\r\n    information: {\r\n        padding: 10,\r\n    }\r\n}));\r\n\r\nexport default function ProgressWidget(props) {\r\n        const classes = useStyles();\r\n        const [progress, setProgress] = useState(0);\r\n        return (\r\n            <Box style={{padding: 10}}>\r\n                <Paper className={classes.container}>\r\n                    <Grid container\r\n                        direction=\"column\"\r\n                        justify=\"flex-start\"\r\n                        alignItems=\"flex-start\">\r\n                        <Grid item\r\n                            className={ props.percentage >= 50 ? classes.headingGreater : classes.headingLess}>\r\n                                <Grid container\r\n                                direction=\"row\"\r\n                                justify=\"space-between\"\r\n                                alignItems=\"center\"\r\n                                style={{width: \"100%\"}}>\r\n                                    <Grid item>\r\n                                    <Typography\r\n                                    variant=\"subtitle1\" style={{opacity: 0.75}}>\r\n                                        { props.loading ? \"Loading...\" : props.for}\r\n                                    </Typography>\r\n                                        \r\n                                    <Typography \r\n                                    align=\"center\" \r\n                                    variant=\"h5\">\r\n                                        <strong>{ props.percentage }</strong>%\r\n                                    </Typography>\r\n                                    </Grid>\r\n\r\n                                    <Grid item\r\n                                    style={{width: \"25%\", marginRight: \"10%\"}}>\r\n                                            <CircularProgressbar \r\n                                            strokeWidth={14}\r\n                                            styles={buildStyles({\r\n                                                strokeLinecap: 'butt',\r\n                                                pathTransitionDuration: 1,\r\n                                                pathColor: `#5095b5`,\r\n                                                textColor: '#f88',\r\n                                                trailColor: '#e3f0ff',\r\n                                              })}\r\n                                            value={props.percentage} />\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Box>\r\n        );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { sizes, designators } from '../utils/department';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { makeStyles, Button, withStyles, Grid, FormControl, TextField, InputLabel, Select, MenuItem, Switch, FormHelperText, FormControlLabel, Paper, Toolbar, Typography, Modal} from '@material-ui/core';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: \"80%\",\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    column: {\r\n        flex: \"1\",\r\n    },\r\n    layout: {\r\n        \"& div\": {\r\n            marginTop: 5,\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n  }));\r\nconst AddNewButton = withStyles(theme => ({\r\n    root: {\r\n        padding: \"0 30px\",\r\n        flexGrow: \"100%\",\r\n        borderRadius: 3,\r\n        boxShadow: '0px 2px 3px rgba(0,0,0,.20)',\r\n        backgroundColor: 'rgb(102, 209, 127)',\r\n        color: 'rgb(43, 170, 102)',\r\n        color: 'white',\r\n        height: 40,\r\n        \"&:hover\": {\r\n            backgroundColor: 'rgb(43, 170, 102)',\r\n        }\r\n    },\r\n})) (Button);\r\nconst LargeSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 100\r\n    },\r\n    switchBase: {\r\n        color: \"#fc4e4e\",\r\n        '&$checked': {\r\n            color: \"#85cf80\",\r\n            transform: \"translateX(160%)\"\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: \"#206b1b\"\r\n        }\r\n    },\r\n    checked: {},\r\n    track: {}\r\n}))(Switch);\r\nexport default function AddNewForm(props) {\r\n\r\n    const classes = useStyles();\r\n    const[expanded, setExpanded] = useState(false);\r\n\r\n\r\n    return (\r\n                <Paper elevation={0}\r\n                borderRadius={20}>\r\n                    <Modal\r\n                        open={props.submitted}\r\n                        className={classes.modal}\r\n                        BackdropComponent='div'\r\n                        >\r\n                        <Grid\r\n                            container\r\n                            justify=\"center\"\r\n                            alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Loader type=\"Oval\" color=\"#227ca8\" height={75} width={75}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Modal>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\">\r\n                            {props.label}\r\n                        </Typography>\r\n                    </Toolbar>\r\n                        \r\n                    <form onSubmit={props.onSubmit}>\r\n                        <Grid container\r\n                            direction=\"row\"\r\n                            className={classes.layout}\r\n                            alignItems=\"flex-start\"\r\n                            justify=\"space-around\">\r\n                                <Grid container\r\n                                    item\r\n                                    direction=\"column\"\r\n                                    justify=\"center\"\r\n                                    style={{margin: 10}}\r\n                                    xs>\r\n                                        <FormControl required>\r\n                                                <TextField \r\n                                                label=\"Hose Number\" \r\n                                                required\r\n                                                variant=\"outlined\"\r\n                                                value={props.hose.number == 0 ? \"\" : props.hose.number}\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                    }}\r\n                                                inputProps={{\r\n                                                    pattern: \"^[0-9]*$\",\r\n                                                }}\r\n                                                onChange={props.onChange('number')}\r\n                                                id=\"inventory-number\" />\r\n                                            </FormControl>\r\n                                            <FormControl required>\r\n                                            <TextField\r\n                                                label=\"Length\"\r\n                                                required\r\n                                                variant=\"outlined\"\r\n                                                value={props.hose.length == 0 ? \"\" : props.hose.length}\r\n                                                onChange={props.onChange('length')}\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                inputProps={{\r\n                                                    pattern: \"^[0-9]*$\",\r\n                                                }}\r\n                                                id=\"hose-length\" />\r\n                                            </FormControl>\r\n                                            <FormControl required>\r\n                                            <Autocomplete\r\n                                                id=\"hose-current\"\r\n                                                options={designators().sort((a,b) => a.department < b.department)}\r\n                                                groupBy={option => option.department}\r\n                                                getOptionLabel={option => option.unit}\r\n                                                onChange={props.onAuto('current')}\r\n                                                value={props.hose.current}\r\n                                                renderInput={params => (\r\n                                                    <TextField {...params} \r\n                                                    variant=\"outlined\"\r\n                                                    required\r\n                                                    label=\"Current Location\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                        }}\r\n                                                    fullWidth/>\r\n                                                  )}\r\n                                                />\r\n                                            </FormControl>\r\n                                            <FormControl required>\r\n                                                <TextField\r\n                                                    id=\"date-tested\"\r\n                                                    required\r\n                                                    variant=\"outlined\"\r\n                                                    label=\"Date Tested\"\r\n                                                    type=\"date\"\r\n                                                    value={props.hose.date == 0 ? \"\" : props.hose.test}\r\n                                                    onChange={props.onChange('test')}\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                />\r\n                                            </FormControl>\r\n                                            <FormControl>\r\n                                                <TextField\r\n                                                    id=\"manufacturer\"\r\n                                                    required\r\n                                                    variant=\"outlined\"\r\n                                                    label=\"Manufacturer\"\r\n                                                    value={props.hose.manufacturer}\r\n                                                    onChange={props.onChange('manufacturer')}\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                />\r\n                                            </FormControl>\r\n                                    </Grid>\r\n                                    <Grid container\r\n                                    item\r\n                                    direction=\"column\"\r\n                                    justify=\"center\"\r\n                                    style={{margin: 10}}\r\n                                    xs>\r\n                                        <FormControl required>\r\n                                                <TextField\r\n                                                label=\"Inventory Number\"\r\n                                                required\r\n                                                variant=\"outlined\"\r\n                                                value={props.hose.inventoryNum == 0 ? \"\" : props.hose.inventoryNum}\r\n                                                onChange={props.onChange('inventoryNum')}\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                    }}\r\n                                                inputProps={{\r\n                                                    pattern: \"^[0-9]*$\",\r\n                                                }}\r\n                                                id=\"hose-number\" />\r\n                                            </FormControl>\r\n                                            <FormControl style={{marginTop: 9, marginBottom: -4}} variant=\"outlined\" required>\r\n                                                <InputLabel htmlFor=\"hose-size\" >Size</InputLabel>\r\n                                                <Select\r\n                                                labelId=\"hose-size\"\r\n                                                labelWidth={30}\r\n                                                id=\"hose-size\"\r\n                                                value={props.hose.size}\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                    }}\r\n                                                onChange={props.onChange('size')}\r\n                                                >\r\n                                                    {sizes.map(s => (\r\n                                                        <MenuItem value={s.value}>{s.label}</MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <FormControl required >\r\n                                            <Autocomplete\r\n                                                id=\"hose-previous\"\r\n                                                fullWidth\r\n                                                options={designators().sort((a,b) => a.department < b.department)}\r\n                                                groupBy={option => option.department}\r\n                                                getOptionLabel={option => option.unit}\r\n                                                onChange={props.onAuto('previous')}\r\n                                                value={props.hose.previous}\r\n                                                renderInput={params => (\r\n                                                    <TextField {...params}\r\n                                                    variant=\"outlined\"\r\n                                                    required\r\n                                                    label=\"Prev. Location\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                        }}\r\n                                                    fullWidth/>\r\n                                                  )}\r\n                                                />\r\n                                            </FormControl>\r\n                                            <FormControl>\r\n                                                <TextField\r\n                                                    id=\"manufactured-date\"\r\n                                                    required\r\n                                                    variant=\"outlined\"\r\n                                                    label=\"Date Manufactured\"\r\n                                                    value={props.hose.mfgDate}\r\n                                                    onChange={props.onChange('mfgDate')}\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                />\r\n                                            </FormControl>\r\n                                    </Grid>\r\n                            </Grid>\r\n                            <Grid container\r\n                            direction=\"row\"\r\n                            justify=\"space-betwen\"\r\n                            spacing={2}\r\n                            style={{padding: 10}}>\r\n                                <Grid\r\n                            container\r\n                            item\r\n                            direction=\"column\"\r\n                            justify=\"flex-start\"\r\n                            xs>\r\n                                <FormControl>\r\n                                    <FormHelperText id=\"my-helper-text-1\">Does the Hose Pass Inspection?</FormHelperText>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                        <LargeSwitch type = \"checkbox\"\r\n                                            onChange={props.onChange('hoseOK')}\r\n                                            checked={props.hose.hoseOK}\r\n                                            name = \"hosepass\" aria-describedby = 'my-helper-text-1' />\r\n                                        }\r\n                                        label={props.hose.hoseOK? \"Pass\" : \"Fail\"}\r\n                                        labelPlacement='start'\r\n                                        className={classes.marginZero}/>\r\n                                </FormControl>\r\n                                {props.hose.hoseOK ? \"\" : \r\n                                    <FormControl>\r\n                                        <TextField\r\n                                        id=\"hose-description\"\r\n                                        label=\"Describe Issues\"\r\n                                        multiline\r\n                                        value={props.hose.descHose}\r\n                                        variant=\"outlined\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                            }}\r\n                                        onChange={props.onChange('descHose')}\r\n                                        />\r\n                                    </FormControl>}             \r\n                            </Grid>\r\n\r\n                            <Grid\r\n                            container\r\n                            item\r\n                            direction=\"column\"\r\n                            justify=\"flex-start\"\r\n                            xs>\r\n                                <FormControl>\r\n                                    <FormHelperText id=\"my-helper-text-2\">Does the Gasket Pass Inspection?</FormHelperText>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                        <LargeSwitch type = \"checkbox\"\r\n                                            onChange={props.onChange('gasketOK')}\r\n                                            checked={props.hose.gasketOK}\r\n                                            name = \"gasketpass\" aria-describedby = 'my-helper-text-2' />\r\n                                        }\r\n                                        label={props.hose.gasketOK? \"Pass\" : \"Fail\"}\r\n                                        labelPlacement='start'\r\n                                        className={classes.marginZero}/>\r\n                                </FormControl> \r\n                                    {props.hose.gasketOK ? \"\" : \r\n                                    <FormControl>\r\n                                        <TextField\r\n                                        id=\"gasket-description\"\r\n                                        label=\"Describe Issues\"\r\n                                        multiline\r\n                                        value={props.hose.descGasket}\r\n                                        variant=\"outlined\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                            }}\r\n                                        onChange={props.onChange('descGasket')}\r\n                                        />\r\n                                </FormControl>}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <FormControl fullWidth>\r\n                                \r\n                                <div style={{padding: 10}}>\r\n                                <AddNewButton type=\"submit\" fullWidth>Submit</AddNewButton>\r\n                                </div>\r\n                            </FormControl>\r\n                        </form>\r\n                    \r\n                </Paper>\r\n\r\n\r\n    );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Loader from 'react-loader-spinner';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Fade, TableFooter, IconButton, Toolbar, Typography, makeStyles, Button, withStyles} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {sizes} from '../utils/department';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    toolbar: {\r\n        backgroundColor: \"#fafafa\",\r\n        minHeight: 100,\r\n    },\r\n    heading: {\r\n        marginLeft: 0,\r\n    }\r\n}));\r\nconst AddNewButton = withStyles(theme => ({\r\n    root: {\r\n        padding: \"0 30px\",\r\n        flexGrow: \"100%\",\r\n        marginTop: 10,\r\n        borderRadius: 3,\r\n        boxShadow: '0px 2px 3px rgba(0,0,0,.20)',\r\n        backgroundColor: 'rgb(102, 209, 127)',\r\n        color: 'rgb(43, 170, 102)',\r\n        color: 'white',\r\n        height: 40,\r\n        \"&:hover\": {\r\n            backgroundColor: 'rgb(43, 170, 102)',\r\n        }\r\n    },\r\n})) (Button);\r\nexport default function Information(props) {\r\n\r\n    //inventory number, hose number, size, length, yearmfg, \r\n    //previous location, current location, test date,\r\n    //pass/fail gasket and hose, description of fail\r\n    //manufacturer\r\n    //important\r\n    //inventory number, size, length, prev/cur, test date,pass fail,desc\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const classes = useStyles();\r\n    //pagination options\r\n    const handleChangePage = (e, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = e => {\r\n        setRowsPerPage(e.target.value);\r\n        setPage(0);\r\n    };\r\n    if(props.loading){\r\n        return (\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\">\r\n                <Grid item>\r\n                <Loader type=\"ThreeDots\" color=\"#7cd996\" height={150} width={150}/>\r\n                </Grid>\r\n            </Grid>\r\n    );\r\n    } else {\r\n        return (\r\n            <Fade in timeout={1200}>\r\n            <Paper className={classes.toolbar}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Grid container\r\n                        direction=\"column\"\r\n                        justify=\"space-between\">\r\n                        <Grid item>\r\n                        <Typography className={classes.heading} variant=\"h6\" id=\"table-title\">\r\n                            Hoses\r\n                        </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <AddNewButton onClick={props.onAdd}> Add New </AddNewButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            <TableContainer elevation={0}   style={{marginTop: 10, maxHeight: 650}} component={Paper}>\r\n            <Table stickyHeader aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"left\">Actions</TableCell>\r\n                            <TableCell align=\"left\">Inventory #</TableCell>\r\n                            <TableCell align=\"left\">Size</TableCell>\r\n                            <TableCell align=\"left\">Length</TableCell>\r\n                            <TableCell align=\"left\">Location</TableCell>\r\n                            <TableCell align=\"left\">Date Tested</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.data.slice(page * rowsPerPage, page*rowsPerPage + rowsPerPage)\r\n                        .map((row,index) => (\r\n                            <TableRow hover key={index}>\r\n                                <TableCell \r\n                                padding='none' \r\n                                style={{width: 100}}>\r\n                                    <IconButton aria-label=\"edit\" color=\"primary\" onClick={(e) => props.onEdit(e, (index+(rowsPerPage*page)))}>\r\n                                        <EditIcon fontSize='small' />\r\n                                    </IconButton>\r\n                                    <IconButton aria-label=\"delete\" style={{ color: \"#c24f4f\"}} onClick={(e) => props.onDelete(e, (index+(rowsPerPage*page)))}>\r\n                                        <DeleteIcon fontSize='small' />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">{row.inventoryNum}</TableCell>\r\n                                <TableCell align=\"left\">{sizes.filter(size => size.value == row.size)[0].label}</TableCell>\r\n                                <TableCell align=\"left\">{row.length}</TableCell>\r\n                                <TableCell align=\"left\">{row.curLoc.unit}</TableCell>\r\n                                <TableCell align=\"left\">{row.dateTest}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>             \r\n            </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                        rowsPerPageOptions={[10, 20, 30]}\r\n                        component=\"div\"\r\n                        count={props.data.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n            </Paper>\r\n            </Fade>\r\n        );\r\n    }\r\n}","import moment from 'moment';\r\n//ex. input \"2020-02-16\"\r\nexport const validateDate = (date) => {\r\n    var current = moment();\r\n    var difference = current.diff(date, 'days');\r\n    return difference < 365;\r\n};\r\n\r\nexport const percentageComplete = (hoses, size) => {\r\n    var percentages = [\r\n    {label:'2\"', percentage: 0}, \r\n    {label:'2 1/2\"', percentage: 0}, \r\n    {label:'3\"', percentage: 0}, \r\n    {label:'3 1/2\"', percentage: 0}, \r\n    {label:'4\"', percentage: 0}];\r\n\r\n    //hoses.test\r\n    //hoses.size\r\n    var filteredHoses = hoses.filter(hose => hose.size == size);\r\n    if(filteredHoses.length == 0){\r\n        return 100;\r\n    }\r\n    //loop through each and check whether the test date is valid\r\n    var valid = 0;\r\n    var total = filteredHoses.length;\r\n    filteredHoses.forEach(hose => {\r\n        if(validateDate(hose.dateTest)) {\r\n            valid++;\r\n        }\r\n    });\r\n    return Math.ceil((valid/total) * 100);\r\n};\r\n\r\nexport default {}","import React from 'react';\r\nimport { makeStyles, Modal, Backdrop } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    open : {\r\n       overflowX: \"hidden\",\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\nexport default function Overlay(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Modal\r\n        open={props.open}\r\n        className={classes.modal}\r\n        onClose={props.onBackdropClick}\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n            transitionDuration: 500,\r\n          }}\r\n        >\r\n            <div style={{padding: 10, maxWidth: 500}}>\r\n                {props.children}\r\n            </div>\r\n        </Modal>\r\n\r\n    );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Paper,\r\n    Typography,\r\n    Button,\r\n    withStyles,\r\n    makeStyles,\r\n    Snackbar,\r\n} from '@material-ui/core';\r\nimport 'typeface-roboto';\r\nimport ProgressWidget from './progressWidget'\r\nimport AddNewForm from './addNewForm';\r\nimport Information from './information.js';\r\nimport {percentageComplete} from '../utils/logistics';\r\nimport axios from 'axios';\r\nimport {sizes} from '../utils/department';\r\nimport Overlay from '../shared/overlay';\r\nimport { validateDate } from '../utils/logistics';\r\nimport { Alert } from '@material-ui/lab';\r\nimport API from '../utils/details';\r\nconst PromptButton = withStyles(theme => ({\r\n    root: {\r\n        padding: \"0 5px\",\r\n        borderRadius: 2,\r\n        margin: 5,\r\n        backgroundColor: 'rgb(135, 201, 170)',\r\n        color: 'rgb(43, 170, 102)',\r\n        color: 'white',\r\n        height: 40,\r\n        \"&:hover\": {\r\n            backgroundColor: 'rgb(43, 170, 102)'\r\n        }\r\n    }\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        padding: 25,\r\n        zIndex: 10\r\n    }\r\n}));\r\n\r\nexport default function ProgressPanel(props) {\r\n\r\n    //add/update hose information\r\n    const [hose, setHose] = useState({\r\n        inventoryNum: 0,\r\n        number: 0,\r\n        size: 2.5,\r\n        length: 0,\r\n        previous: {unit:\"\", department:\"\"},\r\n        current: {unit:\"\", department:\"\"},\r\n        test: 0,\r\n        hoseOK: false,\r\n        gasketOK: false,\r\n        descHose: \"\",\r\n        descGasket: \"\",\r\n        manufacturer: \"\",\r\n        mfgDate: 2000,\r\n    });\r\n    //information loading\r\n    const [loading, setLoading] = useState(true);\r\n    //hose was either updated or added\r\n    const [submitted, setSubmitted] = useState(false);\r\n    //add/delete/update were successful\r\n    const [success, setSuccess] = useState(false);\r\n    //hose data\r\n    const [data, setData] = useState([]);\r\n    //percentages for widget\r\n    const [percentages, setPercentages] = useState([]);\r\n    //old inventory number for update\r\n    const [oldInvNum, setOld] = useState(-1);\r\n    //overlay for add/update\r\n    const [openOverlay, setOpenOverlay] = useState({\r\n        open: false, \r\n        prompt: false, \r\n        edit: false,\r\n        delete: false,\r\n    });\r\n    //snackbar for feedback\r\n    const [snackOpen, setSnack] = useState({\r\n        open: false,\r\n        error: false,\r\n        message: \"\",\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    //get all data at start and add a splash\r\n    //update on new information\r\n    useEffect(() => {\r\n        async function getHoses() {\r\n            await axios\r\n                .get(API +\"getAllHoses\")\r\n                .then(res => {\r\n                    if(!res.data.failure){\r\n                        setData(res.data);\r\n                        //set completed percentages\r\n                        var completed = [];\r\n                        sizes.forEach(size => {\r\n                            completed.push({\r\n                                size: size.label, percentage: percentageComplete(res.data, size.value)\r\n                            });\r\n                        });\r\n                        setPercentages(completed);\r\n                    } else {\r\n                        var completed = [];\r\n                        sizes.forEach(size => {\r\n                            completed.push({\r\n                                size: size.label, percentage: 100\r\n                            });\r\n                        });\r\n                        setPercentages(completed);\r\n                    }\r\n                });\r\n        }\r\n        getHoses();\r\n        var t = 0;\r\n        setTimeout(() => {\r\n            if (data != null) {\r\n                setLoading(false);\r\n            } else {\r\n                t += 100;\r\n            }\r\n        }, 1500 + t);\r\n    },[]);\r\n    //update the information data by just getting the new hose\r\n    //instead of the entire list of hoses\r\n    //runs on success of update/add\r\n    useEffect(() => {\r\n        async function getHose() {\r\n            var h = {\r\n                inventoryNum: parseInt(hose.inventoryNum),\r\n            }\r\n            await axios\r\n                .post(API+ \"getHose\",{h})\r\n                .then(res => {\r\n                    if(!res.data.failure){\r\n                        //splice in new hose/update old one if it was existing\r\n                        var updated = data;\r\n                        var index = data.findIndex(x => x.inventoryNum == hose.inventoryNum || x.inventoryNum == oldInvNum);\r\n                        if(index != -1){//edited because it already exists\r\n                            //just splice into the current data array\r\n                            //dont want to rerender every single hose\r\n                            var updated = data;\r\n                            updated.splice(index, 1, res.data);\r\n                            setData(updated);\r\n                            setOld(-1);\r\n                        } else { //added so just push to data array\r\n                            var updated = data;\r\n                            updated.push(res.data);\r\n                            setData(updated);\r\n                        }    \r\n                    }\r\n                    //set completed percentages\r\n                    var completed = [];\r\n                    sizes.forEach(size => {\r\n                        completed.push({\r\n                            size: size.label, percentage: percentageComplete(data, size.value)\r\n                        });\r\n                    });\r\n                    setPercentages(completed);\r\n                });\r\n        }\r\n        if(success){//only run on success to true\r\n            getHose();\r\n        }\r\n    }, [success]);\r\n    const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            const h = {\r\n                inventoryNum: parseInt(hose.inventoryNum),\r\n                hoseNum: parseInt(hose.number),\r\n                hosePass: hose.hoseOK,\r\n                gasketPass: hose.gasketOK,\r\n                hoseSize: hose.size,\r\n                hoseLength: parseInt(hose.length),\r\n                hoseMfgDate: parseInt(hose.mfgDate),\r\n                prevLocation: hose.previous,\r\n                newLocation: hose.current,\r\n                dateTested: hose.test,\r\n                manufacturer: hose.manufacturer,\r\n                descHose: hose.descHose,\r\n                descGasket: hose.descGasket\r\n            }\r\n            axios\r\n                .post(API+\"insert\", {h})\r\n                .then(res => {\r\n                    setSubmitted(true);\r\n                    if(res.data.failure){\r\n                        setSnack({\r\n                        open: true,\r\n                        error: true,\r\n                        message: res.data.message,\r\n                        });\r\n                      setSubmitted(false);\r\n                    } else {\r\n                      //simulate loading\r\n                      setSuccess(true);\r\n                      setTimeout(() => {\r\n                        setSubmitted(false);\r\n                        setSnack({\r\n                            open: true,\r\n                            error: false,\r\n                            message: \"Hose Added!\"\r\n                        });\r\n                      }, 2000);\r\n                    }\r\n                })\r\n    }\r\n    const handleEditSubmit = (e) => {\r\n        //remember to get the hose back after edit\r\n        //and update the current hose number so that use\r\n        //effect can update properly\r\n        e.preventDefault();\r\n        const h = {\r\n            inventoryNum: parseInt(oldInvNum),\r\n            newInvNum: parseInt(hose.inventoryNum),\r\n            hoseNum: parseInt(hose.number),\r\n            hosePass: hose.hoseOK,\r\n            gasketPass: hose.gasketOK,\r\n            hoseSize: hose.size,\r\n            hoseLength: parseInt(hose.length),\r\n            hoseMfgDate: parseInt(hose.mfgDate),\r\n            prevLocation: hose.previous,\r\n            newLocation: hose.current,\r\n            dateTested: hose.test,\r\n            manufacturer: hose.manufacturer,\r\n            descHose: hose.descHose,\r\n            descGasket: hose.descGasket\r\n        }\r\n        axios\r\n            .post(API +'updateHose', {h})\r\n            .then(res => {\r\n                setSubmitted(true);\r\n                if(res.data.failure) {\r\n                    setSubmitted(false);\r\n                } else {\r\n                    //simulate loading\r\n                    setSuccess(true);\r\n                    setTimeout(() => {\r\n                        setSubmitted(false);\r\n                        setSnack({\r\n                            open: true,\r\n                            error: false,\r\n                            message: \"Hose Updated!\"\r\n                        });\r\n                    }, 2000);\r\n                }\r\n            })\r\n    }\r\n    const handleDelete = (e,selected) => {\r\n        e.preventDefault();\r\n        setHose({...hose, inventoryNum: data[selected].inventoryNum});\r\n        setOpenOverlay({\r\n            ...openOverlay,\r\n            prompt: true,\r\n            delete: true,\r\n        });\r\n    }\r\n    const handleClickOutside = (e) => {\r\n        //prompt for cancel if not already submitted\r\n\r\n        if(!success) {\r\n            setOpenOverlay({\r\n                ...openOverlay,\r\n                prompt: true\r\n            });\r\n        } else {\r\n            //already submitted\r\n            setSubmitted(false);\r\n            setSuccess(false);\r\n             //set overlay to closed\r\n             setOpenOverlay({\r\n                ...openOverlay,\r\n                open: false,\r\n                prompt: false\r\n            });\r\n        }\r\n    };\r\n    const handlePrompt = selected => e => {\r\n        //yes was hit\r\n        if (selected) {\r\n            setSubmitted(false);\r\n            setSuccess(false);\r\n            //set overlay to closed\r\n            setOpenOverlay({\r\n                ...openOverlay,\r\n                open: false,\r\n                prompt: false\r\n            });\r\n        } else {\r\n            //prompt canceled \"No\"\r\n            setOpenOverlay({\r\n                ...openOverlay,\r\n                prompt: false\r\n            });\r\n        }\r\n    }\r\n    const handlePromptDelete = selected => e => {\r\n        if(selected) {\r\n            //delete/send ajax request\r\n            const h = {\r\n                inventoryNum: parseInt(hose.inventoryNum),\r\n            }\r\n            axios\r\n                .post(API+'deleteHose', {h})\r\n                .then(res => {\r\n                    if(res.data.failure){\r\n\r\n                    } else {\r\n                        //update data in information pane\r\n                        if(data.length > 1){\r\n                            var updated = data;\r\n                            updated.splice(updated.findIndex(h => h.inventoryNum == hose.inventoryNum), 1);\r\n                            setData(updated);\r\n                            //update percentages\r\n                            var completed = [];\r\n                            sizes.forEach(size => {\r\n                                completed.push({\r\n                                    size: size.label, percentage: percentageComplete(data, size.value)\r\n                                });\r\n                            });\r\n                            setPercentages(completed);\r\n                        } else {\r\n                            setData([]);\r\n                        }\r\n                        setSnack({\r\n                            open: true,\r\n                            error: false,\r\n                            message: \"Hose Deleted!\",\r\n                        });\r\n                    }\r\n                });\r\n\r\n        }\r\n        //remove prompt and reset hose data\r\n        setOpenOverlay({\r\n            ...openOverlay,\r\n            prompt: false,\r\n            delete: false,\r\n        });\r\n    }\r\n    const handleChange = name => e => {\r\n        //if they re edit the form, set to false\r\n        if(success){\r\n            setSuccess(false);\r\n        }\r\n        if(e.target.type === 'checkbox') {\r\n            setHose({...hose, [name]: e.target.checked})\r\n        } else {\r\n            setHose({...hose, [name] : e.target.value });\r\n        }\r\n        if(name == 'test'){\r\n            validateDate(e.target.value);\r\n        }\r\n    };\r\n    const handleAutoCorrect = name => (e, value) => {\r\n        //if they re edit the form, set to false\r\n        if(success){\r\n            setSuccess(false);\r\n        }\r\n        setHose({...hose, [name]: value});\r\n    };\r\n    const Prompt = props => {\r\n        return (\r\n            <Paper elevation={0} className={classes.paper}>\r\n                <Grid container direction=\"column\" justify=\"center\">\r\n                    <Grid item container justify=\"center\">\r\n                        <Typography variant=\"h6\">\r\n                            {props.label}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid\r\n                        container\r\n                        item\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignContent=\"space-between\">\r\n                        <PromptButton\r\n                            onClick={props.onCancel}\r\n                            style={{\r\n                            backgroundColor: 'rgb(194, 103, 103)'\r\n                        }}>\r\n                            No\r\n                        </PromptButton>\r\n                        <PromptButton onClick={props.onAccept}>\r\n                            Yes\r\n                        </PromptButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        );\r\n    };\r\n    const handleSnackClose = (event,reason) => {\r\n        if(reason === 'clickaway'){\r\n            return;\r\n        }\r\n        setSnack({\r\n            open: false,\r\n            error: false,\r\n            message: \"\"\r\n        });\r\n    };\r\n    const NotificationBar = props => {\r\n        return (\r\n            <Snackbar\r\n            anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n            }}\r\n            open={snackOpen.open}\r\n            autoHideDuration={3000}\r\n            onClose={handleSnackClose}>\r\n                <Alert severity={snackOpen.error ? \"error\" : \"success\"}>{snackOpen.message}</Alert>\r\n            </Snackbar>\r\n        )\r\n    };\r\n    // using index to find the item to edit which can be pulled from data. data needs\r\n    // to be filtered the same way first or maybe pre filter the data in use effect\r\n    // to get rid of nulls for now\r\n    const handleEdit = (e, item) => {\r\n        var selected = data[item];\r\n        setHose({\r\n            inventoryNum: selected.inventoryNum,\r\n            number: selected.hoseNum,\r\n            size: selected.size,\r\n            length: selected.length,\r\n            previous: selected.prevLoc,\r\n            current: selected.curLoc,\r\n            test: selected.dateTest,\r\n            hoseOK: selected.passHose,\r\n            gasketOK: selected.passGasket,\r\n            descHose: selected.descHose,\r\n            descGasket: selected.descGasket,\r\n            manufacturer: selected.manufacturer,\r\n            mfgDate: selected.yearMfg,\r\n        });\r\n        //just in case it is changed\r\n        setOld(selected.inventoryNum);\r\n        setOpenOverlay({\r\n            ...openOverlay,\r\n            edit: true,\r\n            open: true\r\n        });\r\n    }\r\n    const handleAddNew = (e) => {\r\n        setHose({\r\n            inventoryNum: 0,\r\n            number: 0,\r\n            size: 2.5,\r\n            length: 0,\r\n            previous: {unit:\"\", department:\"\"},\r\n            current: {unit:\"\", department:\"\"},\r\n            test: 0,\r\n            hoseOK: false,\r\n            gasketOK: false,\r\n            descHose: \"\",\r\n            descGasket: \"\",\r\n            manufacturer: \"\",\r\n            mfgDate: 2000,\r\n        });\r\n        setOpenOverlay({\r\n            ...openOverlay,\r\n            edit: false,\r\n            open: true\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Grid container direction=\"column\" spacing={1}>\r\n                    <Grid item>\r\n                        <Grid container direction=\"row\" justify=\"center\" align-items=\"flex-start\">\r\n                            {percentages.map(size => (\r\n                                <Grid item>\r\n                                    <ProgressWidget\r\n                                        loading={loading}\r\n                                        for={size.size + ' Hose'}\r\n                                        percentage={(loading\r\n                                        ? 0\r\n                                        : size.percentage)}/>\r\n                                </Grid>\r\n                            ))\r\n}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Information\r\n                            data={data}\r\n                            loading={loading}\r\n                            onAdd={handleAddNew}\r\n                            onEdit={handleEdit}\r\n                            onDelete={handleDelete}/>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Container>\r\n            <NotificationBar />\r\n            <Overlay open={openOverlay.open} onBackdropClick={handleClickOutside}>\r\n                {openOverlay.edit\r\n                    ? <AddNewForm\r\n                        edit\r\n                        onChange={handleChange}\r\n                        onAuto={handleAutoCorrect}\r\n                        onSubmit={handleEditSubmit}\r\n                        submitted={submitted}\r\n                        hose={hose}\r\n                        label=\"Edit Hose\"\r\n                        />\r\n                    : <AddNewForm\r\n                        onChange={handleChange}\r\n                        onAuto={handleAutoCorrect}\r\n                        onSubmit={handleSubmit}\r\n                        submitted={submitted}\r\n                        hose={hose}\r\n                        label=\"Add New Hose\"/>}\r\n            </Overlay>\r\n\r\n            {openOverlay.prompt\r\n                ? <Overlay open={openOverlay.prompt}>\r\n                        {openOverlay.delete ?\r\n                            <Prompt label={`Delete Hose ${hose.inventoryNum}?`} onAccept={handlePromptDelete(true)} onCancel={handlePromptDelete(false)}/>\r\n                            : <Prompt label=\"Cancel?\" onAccept={handlePrompt(true)} onCancel={handlePrompt(false)}/>\r\n                        }\r\n                    </Overlay>\r\n                : \"\"\r\n            }\r\n        </div>\r\n    );\r\n}","import axios from 'axios';\r\nimport API from '../utils/details';\r\nexport const Auth = {\r\n    admin: false,\r\n    authenticated: false,\r\n    authenticate(callback){\r\n        axios.defaults.withCredentials = true;\r\n        axios.post(API +'user/auth')\r\n            .then(res => {\r\n                const {loggedIn, admin} = res.data;\r\n                this.admin = admin;\r\n                this.authenticated = loggedIn;\r\n                callback();\r\n            });\r\n    },\r\n    login(user,callback) {\r\n        axios.defaults.withCredentials = true;\r\n        axios\r\n            .post(API+'user/login', {user})\r\n            .then(res => {\r\n                callback(res.data);\r\n            });\r\n    },\r\n    logout() {\r\n        this.admin = false;\r\n        this.authenticated = false;\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\r\nimport { IconButton, makeStyles, Collapse, Paper, Grid, Divider, ClickAwayListener } from '@material-ui/core';\r\nimport {useLocation, Redirect} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    body: {\r\n        width: \"150px\",\r\n        marginTop: 10,\r\n    },\r\n    menu: {\r\n        transition: theme.transitions.create([\"transform\",\"opacity\"],\r\n        {duration: theme.transitions.duration.short}),\r\n        opacity: 0.7,\r\n        marginBottom: 5, \r\n        \"&:hover\": {\r\n            opacity: 1\r\n        },\r\n    },\r\n    menuOpen: {\r\n        transform: \"rotate(-180deg)\"\r\n    },\r\n    menuClosed: {\r\n        transform: \"rotate(0)\",\r\n    },\r\n    menuBody:{\r\n        width: \"150px\",\r\n        top: 35,\r\n        position: \"absolute\",\r\n    },\r\n    menuItem: {\r\n        background:\"#e6e6e6\",\r\n        color: \"#3d515c\",\r\n        userSelect: \"none\",\r\n        minHeight: 30,\r\n        boxSizing: \"border-box\",\r\n        borderRight: \"4px solid rgba(0,0,0,0.8)\",\r\n        padding: 10,\r\n        fontSize: 20,\r\n        fontWeight: 500,\r\n        textAlign: \"center\",\r\n        transition: theme.transitions.create([\"background\"],\r\n        {duration: theme.transitions.duration.shorter}),\r\n        \"&:hover\":{\r\n            backgroundColor: \"#cccccc\",\r\n\r\n        }\r\n    }\r\n}));\r\nexport default function Menu(props) {\r\n    const classes = useStyles();\r\n    const [menuOpen, setMenu] = useState(false);\r\n    const [redirect, setRedirect] = useState({\r\n        selected: false,\r\n        to: \"\"\r\n    });\r\n    const location = useLocation();\r\n    const handleClick = (e) => {\r\n        setMenu(m => !m);\r\n    }\r\n    useEffect(() => {\r\n        if(redirect.selected){\r\n            setRedirect({selected: false, to: \"\"});\r\n        }\r\n    });\r\n    const getCorrectMenu = () => {\r\n        var path = location.pathname;\r\n        var items = props.list;\r\n        items = items.filter(item => item.redirect != path);\r\n        if(!props.permissions.admin){\r\n            items = items.filter(item => item.redirect != \"/admin\");\r\n        }\r\n        return items;\r\n    }\r\n    const handleRedirect = index => e => {\r\n        setMenu(false);\r\n        setRedirect({selected: true, to: getCorrectMenu()[index].redirect});\r\n    }\r\n    const handleClickAway = e => {\r\n        if(menuOpen) setMenu(false);\r\n    }\r\n    if(redirect.selected){\r\n        return (<Redirect to={redirect.to} />)\r\n    }\r\n    const MenuList = (props) => {\r\n        return(\r\n            <React.Fragment>\r\n            {getCorrectMenu().map((item,i) => (\r\n                <React.Fragment>\r\n                <Grid item>\r\n                    <div onClick={handleRedirect(i)} className={classes.menuItem} key={i}>\r\n                        {item.label}\r\n                    </div>\r\n                </Grid>\r\n                <Divider />\r\n                </React.Fragment>\r\n                ))}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    return (\r\n        <ClickAwayListener onClickAway={handleClickAway}>\r\n        <div className={classes.body}>\r\n            <Grid container\r\n            direction=\"column\"\r\n            alignItems=\"center\">\r\n                <Grid item>\r\n                    <IconButton \r\n                    onClick={handleClick}\r\n                    style={{padding: 0}}>\r\n                        <ArrowDropDownCircleIcon\r\n                        className={[classes.menu, \r\n                            menuOpen ? classes.menuOpen : classes.menuClosed].join(\" \")}\r\n                        fontSize=\"large\"/> \r\n                    </IconButton>\r\n                </Grid>\r\n                <Grid container item\r\n                    className={classes.menuBody}\r\n                    alignItems=\"flex-start\">\r\n                    <Collapse in={menuOpen}\r\n                    style={{width: \"100%\"}}\r\n                    timeout={{enter: 250, exit: 400}}>\r\n                            <Grid container\r\n                                direction=\"column\"\r\n                                alignItems=\"stretch\">\r\n                                <MenuList />\r\n                                </Grid>\r\n                    </Collapse>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        </ClickAwayListener>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Splash from '../shared/splash';\r\nimport Axios from 'axios';\r\nimport { Redirect } from 'react-router';\r\nimport API from '../utils/details';\r\n\r\nexport default function Logout(props) {\r\n    const [loggedOut, setLoggedOut] = useState(false);\r\n    useEffect(() => {\r\n        Axios\r\n        .get(API+\"user/logout\")\r\n        .then(res => {\r\n            props.auth.logout();\r\n            props.onSuccess();\r\n            setLoggedOut(true);\r\n        });\r\n    },[]);\r\n    if(loggedOut) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n    return (\r\n        <Splash />\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\nimport HoseInventory from './common/main/hoseInventory';\nimport Account from './common/accounts/account';\nimport ProgressPanel from './common/admin/progress'\nimport 'overlayscrollbars/css/OverlayScrollbars.css';\nimport './App.css';\nimport {Auth} from './common/shared/auth';\nimport {BrowserRouter as Router, useLocation, Route, Switch, Link, Redirect} from 'react-router-dom';\nimport Splash from './common/shared/splash';\nimport Menu from './common/shared/menu';\nimport { Grid } from '@material-ui/core';\nimport Logout from './common/logout/logout';\n\nfunction App() {\n    const [userAuth, setUserAuth] = useState({\n      admin: false,\n      loggedIn: false,\n    });\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [showMenu, setMenu] = useState(false);\n    const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    Auth.authenticate(()=>{\n      if(Auth.authenticated){\n        setLoggedIn(true);\n        setMenu(true);\n      }\n      setTimeout(() => {\n        setLoading(false);\n      }, 500);\n    })\n  }, []);\n  const ProtectedRoute = \n  ({component: Component, privledges: {admin, authenticate, prevent}, ...rest}) => (\n    <Route {...rest} render={(props) => {\n        if(admin){\n          if(Auth.admin === true){\n            return (<Component {...rest.auth} />)\n          } else {\n            return (<Redirect to=\"/login\" />)\n          }\n        }\n        if(authenticate){\n          if(Auth.authenticated === true) {\n            return (<Component {...rest.auth} />)\n          } else {\n            return (<Redirect to=\"/login\" />)\n          }\n        }\n        if(prevent){\n          if(Auth.authenticated === true){\n            return (<Redirect to=\"/inventory\" />)\n          } else {\n            return (<Component {...rest.auth} />)\n          }\n        }\n    }} />\n  );\n  if(loading) {\n    return <Splash />;\n  }\n  /*\n  label, redirect path object array\n  */\n  const createMenuList = () => {\n    return [{label: \"Inventory\", redirect: \"/inventory\"},\n            {label: \"Admin\", redirect: \"/admin\"},\n            {label: \"Logout\", redirect: \"/logout\"}];\n  };\n  const handleMenu = () => {\n    //toggle menu shown\n    setMenu(m => !m);\n  }\n  return (\n    <Router>\n\n      {loggedIn ? <Redirect to=\"/inventory\" /> : \"\"}\n\n      { showMenu ? \n      <Grid container\n        direction=\"row\"\n        justify=\"center\">\n          <Grid item>\n            <Menu list={createMenuList()} permissions={{admin:Auth.admin}} />\n          </Grid>\n        </Grid> : \"\"\n      }\n      <Switch>\n\n        <ProtectedRoute exact path=\"/\"\n        privledges={{admin: false, authenticate: false, prevent: true}} \n        component={() => (<Account auth={Auth} onSuccess={handleMenu} />)} />\n\n        <ProtectedRoute exact path=\"/login\"\n        privledges={{admin: false, authenticate: false, prevent: true}} \n        component={() => (<Account auth={Auth} onSuccess={handleMenu} />)} />\n\n        <ProtectedRoute exact path=\"/admin\" \n            privledges={{admin: true, authenticate: true, prevent: false}} \n            component={ProgressPanel} />\n\n        <ProtectedRoute exact path=\"/inventory\" \n            privledges={{authenticate: true}} \n            component={HoseInventory} />\n\n        <ProtectedRoute exact path=\"/logout\"\n            privledges={{authenticate: true}}\n            component={() => (<Logout auth={Auth} onSuccess={handleMenu} />)} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}